<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="layeredButton1.Canvas" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAY4SURBVHhe7Z1LaKNVFMezdNnlLF26dDlLl7MSN4KLNkm/
        e79HpmmapOm0dWqtdl4+UBARrKgIvnBAUVEHFHGjwyA4yCwUwYLiMGJb2o59jJNFvL/09jHTmzT58qXJ
        l9w//CmB73Hv+c6559xzz71NdBqpVOoBIcQjUsq0+juXF97VvPCvw6zwl+DubxgI+YK6NuAede+Afkz/
        QAvsFILIOd6iJ2V53hlZXRgu/vtperJyI/l05dfkXE1+mZ6qvJ0qbs6rezLCvTMq3JuK7ziO81hPC5QO
        jrne5Yx0ty852VUE8WdyvlIZfL4l3kqeq3yXOlt5ycmtIVClpd+qdz3Bh9Kvji/oRFa4l04Ld50Ofp+a
        qdwdfM4oiKj4U3K28qqTXx+R3u2c8BZiq5UjUo6OSn/l4+TE9trgBWNn28nNwYuVK8mpck76q6PCn4uN
        RmKqjEtvpQu3OyG4+4kgP0yXNviYOCrdzO4DXhEviakyLpk600nyMXFUOC4+sm52d2Bc+OfxinhJU+O7
        iTguPnJR+B903KxpgBLelffTpTVTY7uZ3ySnt8ZF8GPHnAwvVl/xxg9DM3dNDYwDsZii8P7yPO8h3a3j
        gRqMH+bFvyefNTYsTlweulB50sn8Pea4j+rutRdZ4T0+KzK3eLGpQXEknvricHZlTPjTupvtAcLjRbzQ
        1JC4k9ALh6i7Gy0w27NOZrndM4lO80Unt4Ki6G5HA+UwTkw4wR+9ZLa1iIKgKCiM7n5rIFTB2/aCw2iU
        KAoKg+JoMYQHcV6cQ5WwRGFQHBRIi6J5MKDGMUiOiigOCqTF0RxIepK3Mz24n4hnJrOkxdI4mHRHkfCM
        O0lCkMlpypTJVjDhNj2wH/luuriRcd2SFk99IOmc8HpqptEqmTgUhLfckFdG0kjc9KB+ZjW7LbwFLSYz
        0D7svRsyyd1GAuy89NfraqGaTL/yWfLMtukBlkeENWgfK1m9miiIiqPC3zRqIWupLAeabrLc50fp0nYg
        5YwW2z5YkGZN1XST5T6JjYmRtdh2oFRyICu9jV5PVUXFkuOv37MMYAPn5vheavyOlDKvxUcVgfva1+lp
        48WWh8lQx5CnxUeq3l+yM4/GyVBHkRSRC+PfCVyz6ULL2nzKOb2qzPikTVuFJDWKSoABi0V5BkXTRZa1
        ic/AdySo7qRA0XSRZW1SSUs5sgqgvav8MF1kWZtUoFHGxwzkehyqqrqNRC1ELzaEaYHKf1QSgXC3rADD
        sSpAT8iyFWA4VgVoTTg8qwK0y5fhyLIH2zesFw7JPS+cl8EX15Izxossa5PamTHh/8JceOpyaqJsusiy
        Npm9MYuzydSQ3EuqkpomRW26yLI2yWCRyaomVAPpbtnlzObIzlDWkqoCtI6kOe45kF0oW06zj8x0seVh
        fpI6Uw4ceU6LL5Hwff/BgvCtABsk+wLZXKnFtwNUsp8KycNybwZyP5QZB+T5TTdZ7vPz1GQ5K9yXtdj2
        weoc5Vu2OqE+p53MmlI28x4SWx9Tn8a6mIOwWlifdbVvF5SxUs5qekA/81A5Ry1YLTSzIe3bhS00v5cN
        FZgfhNJCW2yuiSUeWVxugtXCHTatfQdRdIJrPw/N/md6cD+QsKUgvN+wSC2S5qBuHCg5/mI3HqTTbjJ8
        TYrgJnkCLY5w4AETIvinn/KFjHvPOCNLyuue1GJoDWQezg9nl/oltHl9uLCWldLV3Y8GedcvvDFc6PlC
        zK9SU1tq3HtTdzta8OBe3gqGw8Rx6u62Bxza1YuaiOYhvNAetxlgzmRle8GxMK6jEG0z21rAsXDmVJxD
        HBQAb4tC6G4dL/Sa8mIca2sIkgnPIgtVwoJgmwIlzkqNg0ljskzPmGG0HCRHCU7r5cBXGtet8SKnCJMY
        YG57LM6iWaCNNG7c8Ve7aaGeXQjk8zjHWrWx9eOc2g1Mg2oHGt3J8ZFxjmiBrRwNJ0O7CTSa8ZHiJXb2
        HEcpMeMwpWfsZWMB6NACeByBt2ZbFBWdaATHwEe5iE8oxQeiTI9CKer2Ou5d2wU0gn9EQCUEFU6UifFP
        CBjgMfejHBCCZ3zlHgTGTlN2DPGBuu586HYDp6MEekpxjgEec2fbhdKeagW8iQie8ZV7EFhnnUIi8T9C
        WQE4TezdKQAAAABJRU5ErkJggg==
</value>
  </data>
</root>